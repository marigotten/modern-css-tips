/***
    The new CSS reset - version 1.7.2 (last updated 23.6.2022)
    GitHub page: https://github.com/elad2412/the-new-css-reset
***/
/*
    Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
    - The "symbol *" part is to solve Firefox SVG sprite bug
 */
*:where(:not(html, iframe, canvas, img, svg, video):not(svg *, symbol *)) {
  all: unset;
  display: revert;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Reapply the pointer cursor for anchor tags */
a,
button {
  cursor: revert;
}

/* Remove list styles (bullets/numbers) */
ol,
ul,
menu {
  list-style: none;
}

/* For images to not be able to exceed their container */
img {
  max-width: 100%;
}

/* removes spacing between cells in tables */
table {
  border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
input,
textarea {
  -webkit-user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
  white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
  -webkit-appearance: revert;
  -moz-appearance: revert;
       appearance: revert;
}

/* reset default text opacity of input placeholder */
::-moz-placeholder {
  color: unset;
}
:-ms-input-placeholder {
  color: unset;
}
::placeholder {
  color: unset;
}

/* fix the feature of 'hidden' attribute.
 display:revert; revert to element instead of attribute */
:where([hidden]) {
  display: none;
}

/* revert for bug in Chromium browsers
 - fix for the content editable attribute will work properly.
 - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element*/
:where([contenteditable]:not([contenteditable=false])) {
  -moz-user-modify: read-write;
  -webkit-user-modify: read-write;
  overflow-wrap: break-word;
  -webkit-line-break: after-white-space;
  -webkit-user-select: auto;
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable=true]) {
  -webkit-user-drag: element;
}

body {
  margin: 0;
}

img {
  width: 100%;
}

#swipeOverSections img {
  height: 100vh;
  display: block;
  -o-object-fit: cover;
     object-fit: cover;
  position: relative;
}
#swipeOverSections .title-1 {
  height: 200vh;
  pointer-events: none;
}
#swipeOverSections .title-1__inner {
  height: 100vh;
  position: -webkit-sticky;
  position: sticky;
  top: 0;
}
#swipeOverSections .title-2 {
  margin-top: -100vh;
}

#fullPageSwipeEffectY .scroll-container {
  height: 100vh;
  height: 100dvh;
  overflow-y: scroll;
  -ms-scroll-snap-type: y mandatory;
      scroll-snap-type: y mandatory;
}
#fullPageSwipeEffectY .scroll-container .section {
  height: 100vh;
  height: 100dvh;
  width: 100%;
  -o-object-fit: cover;
     object-fit: cover;
  -o-object-position: center;
     object-position: center;
  scroll-snap-align: start;
  scroll-snap-stop: always;
}

#fullPageSwipeEffectX .scroll-container {
  height: 100vh;
  height: 100dvh;
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
  overflow-x: scroll;
  -ms-scroll-snap-type: x mandatory;
      scroll-snap-type: x mandatory;
}
#fullPageSwipeEffectX .scroll-container .section {
  height: 100vh;
  height: 100dvh;
  width: 100%;
  -o-object-fit: cover;
     object-fit: cover;
  -o-object-position: center;
     object-position: center;
  scroll-snap-align: start;
  scroll-snap-stop: always;
}

#HamburgerMenuwithCheckbox {
  background-color: #666;
}
#HamburgerMenuwithCheckbox input {
  display: none;
}
#HamburgerMenuwithCheckbox button {
  all: unset;
  cursor: pointer;
  display: block;
}
#HamburgerMenuwithCheckbox button * {
  pointer-events: none;
}
#HamburgerMenuwithCheckbox .nav-burger {
  width: 31px;
  height: 31px;
  display: block;
  position: relative;
}
#HamburgerMenuwithCheckbox .nav-burger-container {
  position: absolute;
  left: 7px;
  top: 15px;
  transition: transform 0.2s ease-in-out 0.1s;
}
#HamburgerMenuwithCheckbox .nav-burger-container__top {
  transform: translateY(-3px) scaleX(0.88235);
}
#HamburgerMenuwithCheckbox .nav-burger-container__bottom {
  transform: translateY(3px) scaleX(0.88235);
}
#HamburgerMenuwithCheckbox .nav .line {
  width: 17px;
  height: 1px;
  border-radius: 3px;
  background: #fff;
  transition: transform 0.2s ease-in-out;
}
#HamburgerMenuwithCheckbox input:checked + label .nav-burger-container {
  transition-delay: 0s;
}
#HamburgerMenuwithCheckbox input:checked + label .nav-burger-container__bottom {
  transform: none;
}
#HamburgerMenuwithCheckbox input:checked + label .nav-burger-container__top {
  transform: none;
}
#HamburgerMenuwithCheckbox input:checked + label .nav-burger-container__bottom .line {
  transform: none;
  transition-delay: 0.1s;
  transform: rotateZ(45deg);
}
#HamburgerMenuwithCheckbox input:checked + label .nav-burger-container__top .line {
  transform: none;
  transition-delay: 0.1s;
  transform: rotateZ(-45deg);
}/*# sourceMappingURL=style.css.map */